<!--HashCalculator
    Tool for calculating and comparing file hash sums, e.g. sha1
    Copyright(C) 2016 Anthony Fung
   
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
   
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.
   
    You should have received a copy of the GNU General Public License
    along with this program. If not, see<http://www.gnu.org/licenses/>.-->

<Window x:Class="HashCalculator.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:control="clr-namespace:HashCalculator.View.Control"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
        DataContext="{StaticResource ViewModel}"
        Height="300"
        x:Name="ApplicationWindow"
        x:FieldModifier="private"
        Title="File Hash Calculator"
        Width="700">
    <Grid Cursor="{Binding HashCodeBatchCalculationService.CalculationIsRunning,
                           Converter={StaticResource IsBusyToCursorNameConverter}}"
          Margin="5"
          Name="LayoutRoot">
        
        <Grid.Resources>
            <Thickness x:Key="LabelMarginThickness">0,0,0,2</Thickness>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition MinHeight="48" />
            <RowDefinition MinHeight="48" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--Input Files textblock-->
        <TextBlock Grid.Row="0"
                   Margin="{StaticResource LabelMarginThickness}"
                   Text="Input Files">
        </TextBlock>

        <Button Content="About..."
                Command="{Binding Commands.ShowAbout}"
                CommandParameter="{Binding ElementName=ApplicationWindow}"
                Grid.Row="0"
                HorizontalAlignment="Right">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ContentTextBlock"
                                                        Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                        To="CornflowerBlue">
                                        </ColorAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <TextBlock FontStyle="Italic" Name="ContentTextBlock" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <!--DataGrid-->
        <control:DragDropHost DropReceiver="{Binding UserInput}"
                              Grid.Row="1"
                              IsEnabled="{Binding HashCodeBatchCalculationService.CalculationIsRunning, Converter={StaticResource BoolInversionConverter}}"
                              Margin="0,0,0,2">
            <DataGrid AutoGenerateColumns="False"
                      HorizontalGridLinesBrush="LightGray"
                      IsEnabled="{Binding HashCodeBatchCalculationService.CalculationIsRunning, Converter={StaticResource BoolInversionConverter}}"
                      ItemsSource="{Binding UserInput.InputFileList}"
                      Name="InputFileDataGrid"
                      VerticalGridLinesBrush="LightGray">
                <DataGrid.Resources>
                    <ControlTemplate x:Key="DataGridRowTextBoxTemplate" TargetType="TextBox">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </ControlTemplate>
                    
                    <system:Double x:Key="RowBackgroundOpacity">0.8</system:Double>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <!--'File' Column-->
                    <DataGridTemplateColumn Header="Path" Width="180">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Border Background="{Binding FileExistsAtFilePath, Converter={StaticResource ValidFilePathToBackgroundBrushConverter}}"
                                            Opacity="{StaticResource RowBackgroundOpacity}">
                                    </Border>
                                    <TextBox Template="{StaticResource DataGridRowTextBoxTemplate}"
                                             Text="{Binding FilePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    </TextBox>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Hash Column-->
                    <DataGridTemplateColumn Width="*">
                        <!--Column Header-->
                        <DataGridTemplateColumn.Header>
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <ToolTipService.ToolTip>
                                    <ToolTip>
                                        <ToolTip.Template>
                                            <ControlTemplate>
                                                <Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                                                    <StackPanel>
                                                        <StackPanel.Resources>
                                                            <Style TargetType="Border">
                                                                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                                <Setter Property="BorderThickness" Value="0,0,0,1" />
                                                            </Style>
                                                        </StackPanel.Resources>

                                                        <Border Background="{Binding SuccessBrush, Source={StaticResource AppBrushes}}">
                                                            <TextBlock Margin="2" Text="File name and hash sum match" />
                                                        </Border>

                                                        <Border Background="{Binding IndeterminateBrush, Source={StaticResource AppBrushes}}">
                                                            <TextBlock Margin="2" Text="Hash sum match, no file name match" />
                                                        </Border>

                                                        <Border Background="{Binding ErrorBrush, Source={StaticResource AppBrushes}}">
                                                            <TextBlock Margin="2" Text="File name match, hash sum mismatch" />
                                                        </Border>

                                                        <Border Background="{Binding DefaultBrush, Source={StaticResource AppBrushes}}" BorderThickness="0">
                                                            <TextBlock Margin="2" Text="No file name or hash sum match" />
                                                        </Border>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </ToolTip.Template>
                                    </ToolTip>
                                </ToolTipService.ToolTip>

                                <TextBlock IsHitTestVisible="False" Text="Calculated Hash Sum" />
                                <TextBlock FontStyle="Italic" IsHitTestVisible="False" Margin="5,0,0,0" Text="(mouse cursor here for row background colour key)" />
                            </StackPanel>
                        </DataGridTemplateColumn.Header>

                        <!--Column Body-->
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Border Background="{Binding HashCodeMatch, Converter={StaticResource HashCodeMatchCriteriaToBackgroundConverter}}"
                                            Opacity="{StaticResource RowBackgroundOpacity}" />
                                    <TextBox IsReadOnly="True" Text="{Binding CalculatedFileHash, Mode=OneWay}" Template="{StaticResource DataGridRowTextBoxTemplate}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Clear Row Button Column-->
                    <DataGridTemplateColumn CanUserReorder="False"
                                            CanUserResize="False"
                                            CanUserSort="False"
                                            Width="20">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="{Binding Commands.ClearFilePath, Source={StaticResource ViewModel}}"
                                        CommandParameter="{Binding}">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Grid>
                                                <Border Background="{Binding DefaultBrush, Source={StaticResource AppBrushes}}"
                                                        Opacity="{StaticResource RowBackgroundOpacity}">
                                                </Border>
                                                
                                                <TextBlock FontFamily="Wingdings 2"
                                                           Foreground="Gray"
                                                           HorizontalAlignment="Center"
                                                           Text="Ò"
                                                           VerticalAlignment="Center">
                                                </TextBlock>
                                            </Grid>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </control:DragDropHost>

        <!--Helper Text Watermark-->
        <TextBlock Grid.Column="0"
                   Grid.Row="1"
                   HorizontalAlignment="Center"
                   IsHitTestVisible="False"
                   Margin="0,16,0,0"
                   VerticalAlignment="Center">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding UserInput.InputFileList.Count}" Value="0">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>

            <TextBlock FontSize="16"
                       FontWeight="Bold"
                       Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                       Text="Drag Files Here">
            </TextBlock>
        </TextBlock>

        <!--Grid splitter-->
        <GridSplitter Background="Transparent" Grid.Row="2" Height="9" HorizontalAlignment="Stretch" VerticalAlignment="Top" Canvas.ZIndex="2" />
        <Separator Grid.Row="2" IsHitTestVisible="False" Margin="0,3,0,0" Opacity="0.4" VerticalAlignment="Top" />
        
        <!--Known Hash Sums-->
        <Grid Grid.Row="2" Margin="0,8,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0"
                       Margin="{StaticResource LabelMarginThickness}"
                       Text="Known Hash Sums">
            </TextBlock>

            <TextBox AcceptsReturn="True"
                     FontFamily="Courier New"
                     FontSize="12"
                     Grid.Column="0"
                     Grid.Row="1"
                     IsEnabled="{Binding HashCodeBatchCalculationService.CalculationIsRunning, Converter={StaticResource BoolInversionConverter}}"
                     Margin="0,0,0,5"
                     Text="{Binding UserInput.KnownFileHashCodesText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            </TextBox>

            <!--Helper Text Watermark-->
            <StackPanel Grid.Column="0"
                        Grid.Row="1"
                        HorizontalAlignment="Left"
                        IsHitTestVisible="False"
                        Margin="2,0,0,0"
                        VerticalAlignment="Top">
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UserInput.KnownFileHashCodesText}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <StackPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontStyle" Value="Italic" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Style>
                </StackPanel.Resources>

                <TextBlock Text="HashSum *FileName/Path, e.g." />
                <TextBlock Text="74765bdad82840ccf94dd8aeb84bcae8 *File.txt" />
            </StackPanel>
        </Grid>

        <!--Hash calculation actions/options-->
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <Grid.Resources>
                <Thickness x:Key="ControlMargin" Right="5" />
            </Grid.Resources>
            
            <!--Progress bar-->
            <Grid Grid.Column="0"
                  VerticalAlignment="Center"
                  Visibility="{Binding HashCodeBatchCalculationService.CalculationIsRunning, Converter={StaticResource BoolToVisibilityConverter}}">
                
                <ProgressBar Margin="{StaticResource ControlMargin}"
                             Maximum="1"
                             Minimum="0"
                             Value="{Binding HashCodeCalculationService.NormalizedProgress, Mode=OneWay}">
                </ProgressBar>

                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Run Text="{Binding HashCodeBatchCalculationService.ListProgress, Mode=OneWay, StringFormat=[\{0\}]}" />
                    <Run Text="{Binding HashCodeCalculationService.PercentageProgress, Mode=OneWay, StringFormat=\{0\}%}" />
                </TextBlock>
            </Grid>

            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <StackPanel.Resources>
                    <system:Double x:Key="ButtonWidth">86</system:Double>
                    
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="{StaticResource ControlMargin}" />
                        <Setter Property="Width" Value="{StaticResource ButtonWidth}" />
                    </Style>

                    <Style TargetType="ComboBox">
                        <Setter Property="Margin" Value="{StaticResource ControlMargin}" />
                        <Setter Property="Width" Value="{StaticResource ButtonWidth}" />
                    </Style>

                    <Style TargetType="ToggleButton">
                        <Setter Property="Margin" Value="{StaticResource ControlMargin}" />
                        <Setter Property="Width" Value="{StaticResource ButtonWidth}" />
                    </Style>
                </StackPanel.Resources>

                <!--Full Path Matching-->
                <ToggleButton Content="Full Path"
                              IsChecked="{Binding UserInput.MatchFullFilePath, Mode=TwoWay}">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Select this to use a file's full path when comparing/exporting files. Unselect this to only use the file name." />
                    </ToolTipService.ToolTip>
                </ToggleButton>

                <!--Algorithm Selection-->
                <ComboBox IsEnabled="{Binding HashCodeBatchCalculationService.CalculationIsRunning, Converter={StaticResource BoolInversionConverter}}"
                          ItemsSource="{Binding HashAlgorithmSelection.HashAlgorithms}"
                          SelectedItem="{Binding HashAlgorithmSelection.SelectedHashAlgorithm}">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Selected hash algorithm" />
                    </ToolTipService.ToolTip>
                </ComboBox>

                <!--Buttons-->
                <Button Command="{Binding Commands.BeginCalculation}"
                        Content="Calculate">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Calculate hash sums for files listed under Input Files" />
                    </ToolTipService.ToolTip>
                </Button>

                <Button Command="{Binding Commands.AbortCalculation}"
                        Content="Cancel"
                        Cursor="Arrow">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Cancel batch hash sum calculation" />
                    </ToolTipService.ToolTip>
                </Button>

                <Button Command="{Binding Commands.ExportHashList}"
                        Content="Export"
                        Margin="0">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Export calculated hash sums" />
                    </ToolTipService.ToolTip>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
